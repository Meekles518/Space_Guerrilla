using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.UIElements;

// 수비형 적 Ai의 행동을 제어
// 수비형 적 State들과 Enemy_Control 사이를 연결
public class Defensive_AI : MonoBehaviour
{
    Defensive_State currentState; // 현재 스테이트
    public Transform player; // 플레이어 트랜스폼
    public Enemy_Control control; // Enemy_Control 컴포넌트

    static public bool isShoot; // Enemy_Shooter를 제어하는데 사용할 불 변수

    public Vector2 SelfSpawnposition; // 본인 스폰위치
    public Vector2 FleetSpawnpoint; // 전대 스폰위치

    public float EnemytoPlayer; // 적과 플레이어 사이 거리
    public float EnemytoFleetSpawn; // 적과 전대 스폰위치 사이 거리
    public float EnemytoSelfSpawn; // 적과 본인 스폰위치 사이 거리



    // 값들 초기화
    void OnEnable()
    {
        control = GetComponent<Enemy_Control>(); // 컨트롤 컴포넌트를 가져옴
        player = GameObject.Find("Player").transform; // 플레이어 오브젝트를 찾아 트랜스폼 할당
        currentState = new Defensive_Idle(gameObject, player, control); // 현재 스테이트를 Idle로 설정
        SelfSpawnposition = (Vector2) transform.position; // 정적 스폰위치

        // 각종 거리의 초기값을 계산
        EnemytoPlayer = Vector2.Distance((Vector2)transform.position, player.position);
        EnemytoFleetSpawn = Vector2.Distance((Vector2)transform.position, FleetSpawnpoint);
        EnemytoSelfSpawn = Vector2.Distance((Vector2)transform.position, SelfSpawnposition);

        // Opportunistic 적에게 필요한 초기값들을 컨트롤 컴포넌트에 전달
        control.EnemytoPlayer = EnemytoPlayer;
        control.EnemytoFleetSpawn = EnemytoFleetSpawn;
        control.EnemytoSelfSpawn = EnemytoSelfSpawn;
    }


    // 값들을 지속적으로 갱신
    void FixedUpdate()
    {
        // Opportunistic_Ai가 제공하는 값들을 지속적으로 갱신
        EnemytoPlayer = Vector2.Distance((Vector2)transform.position, player.position);
        EnemytoFleetSpawn = Vector2.Distance((Vector2)transform.position, FleetSpawnpoint);
        EnemytoSelfSpawn = Vector2.Distance((Vector2)transform.position, SelfSpawnposition);
        control.EnemytoPlayer = EnemytoPlayer;
        control.EnemytoFleetSpawn = EnemytoFleetSpawn;
        control.EnemytoSelfSpawn = EnemytoSelfSpawn;

        // 현재 State를 지속적으로 갱신
        currentState = currentState.Process();
        // 현재 State를 Enmey_Control로 전달
        control.statename = (Enemy_Control.STATE) currentState.name;
    }
}